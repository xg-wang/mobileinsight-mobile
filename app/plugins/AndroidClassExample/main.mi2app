#!/usr/bin/python

'''
A demo plugin to retrive various info from Android system,
including WiFi status and logcat output on certain process.

Author  : Zengwen Yuan
Version : 2.0  Major refactoring, add logcat monitoring example
          1.0  Init version
'''

import os
import sys
import time
import commands
import traceback
import subprocess
from jnius import autoclass, cast

from service import mi2app_utils as util
from mobile_insight.analyzer import Analyzer

ANDROID_SHELL = "/system/bin/sh"

search_proc = ["wpa_supplicant", "wpa", "wifi"]

class LogcatMonitor(Analyzer):
    def __init__(self, proc_name):
        Analyzer.__init__(self)
        self.ps_num = -1
        self.proc_name = proc_name
        self._get_thread_pid(self.proc_name)

    def _get_thread_pid(self, proc_name):
        proc = subprocess.Popen(
            "su -c ps | grep -i %s" % proc_name,
            executable=ANDROID_SHELL,
            shell=True,
            stdout=subprocess.PIPE)
        out = proc.communicate()

        try:
            self.ps_num = str(out[0].split('\n')[0]).split()[1]
            self.log_warning("_get_thread_pid: self.ps_num = %s" % self.ps_num)
        except:
            self.log_warning("Exception when getting %s threads" % proc_name)

    def run(self):
        while True:
            try:
                lines = util.run_shell_cmd("logcat --pid %s -d" % self.ps_num, True).split('\n')
                for line in lines[1:]:
                    self.log_info(line)
            except:
                self.log_warning("run: Exception in getting output!")
            time.sleep(1)


'''
Don't use the following block in plugin:

PythonActivity = autoclass('org.kivy.android.PythonActivity')
pyActivity = PythonActivity.mActivity

The plugin is run as PythonService, therefore the type of pyActivity
will be <type 'NoneType'>
'''
PythonService  = autoclass('org.kivy.android.PythonService')
pyService = PythonService.mService

Context = autoclass('android.content.Context')


'''
Grep the process name and then pull the logcat output
'''
mLogcatMonitor = LogcatMonitor(search_proc[0])

mLogcatMonitor.log_info("This plugin requires WiFi to be enabled.")
mWifiManager = pyService.getSystemService(Context.WIFI_SERVICE)
mWifiInfo = mWifiManager.getConnectionInfo()
mLogcatMonitor.log_info("We are connected to %s." % mWifiInfo.getSSID())
mLogcatMonitor.log_info("Wifi on frequency %s." % mWifiInfo.getFrequency())

mLogcatMonitor.log_info("Starting to monitor Android logcat output.")
mLogcatMonitor.run()

